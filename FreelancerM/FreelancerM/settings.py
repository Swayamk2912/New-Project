"""
Django settings for FreelancerM project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-drgy6hx$4-=-*xb@57%^chtniuby3n4ob^kgrx0h4w#3hb63+4'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['renitent-juliet-hypersuggestible.ngrok-free.dev','127.0.0.1','localhost']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'marketplace',
    'users',
    'jobs',
    'categories',
    'rest_framework',
    'rest_framework.authtoken',
    'widget_tweaks',
    'proposals', 'contracts', 'messaging', 'payments', 'notifications',
    'channels', # Added for WebSocket support
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'celery', # Added for Celery integration
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'allauth.account.middleware.AccountMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'FreelancerM.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / "templates"],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'messaging.context_processors.notification_counts', # Updated context processor
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

# Social account configuration

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'APP': {
            'client_id': '901307847965-jgvvqj2l58f5mu126spdio1gtl31hbcc.apps.googleusercontent.com',
            'secret': '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 ',
            'key_file': None,
        },
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'offline',
        },
        
        
    },
    'facebook': {
        'METHOD': 'oauth2',
        'SDK_URL': '//connect.facebook.net/en_US/sdk.js',
        'SCOPE': ['email', 'public_profile'],
        'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
        'INIT_PARAMS': {'cookie': True},
        'FIELDS': [
            'id',
            'email',
            'name',
            'first_name',
            'last_name',
            'verified_email',
            'link'
        ],
        'EXCHANGE_TOKENS': True,
        'LOCALE_FUNC': 'locale.getlocale',
        'VERIFIED_EMAIL': True,
        'VERSION': 'v17.0'
    }
}

WSGI_APPLICATION = 'FreelancerM.wsgi.application'
ASGI_APPLICATION = 'FreelancerM.asgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles_collected') # Changed for deployment
STATICFILES_DIRS = [
    BASE_DIR / 'static', # For development static files
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
AUTH_USER_MODEL = 'users.User'

LOGOUT_REDIRECT_URL = "users:login"
LOGIN_URL = "users:login"

# Base URL for the site (used for email links)
SITE_URL = 'http://localhost:8000' # Change this to your production domain

# Email settings for production (SMTP backend)
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False # Explicitly set to False when using TLS
EMAIL_TIMEOUT = 5 # Add a timeout for email sending
EMAIL_HOST_USER = os.environ.get('EMAIL_HOST_USER', 'swayamkalra2003@gmail.com') # Sender's Gmail address
EMAIL_HOST_PASSWORD = os.environ.get('EMAIL_HOST_PASSWORD', 'nbxu vdhb nhpx oijp') # The generated App Password
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER # Default sender for emails
SERVER_EMAIL = EMAIL_HOST_USER # For error reporting from Django

# Base URL for the site (used for email links)
BASE_URL = 'http://localhost:8000' # Change this to your production domain

# Celery Configuration
CELERY_BROKER_URL = 'redis://redis:6379/0' # Redis as the message broker
CELERY_RESULT_BACKEND = 'redis://redis:6379/0' # Store task results in Redis
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = 'Asia/Calcutta' # Or your desired timezone
CELERY_TASK_TRACK_STARTED = True
CELERY_TASK_ALWAYS_EAGER = False # Set to True for synchronous execution in tests
CELERY_WORKER_POOL = 'solo' # Use solo for Windows compatibility to avoid eventlet/ssl issues

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('redis', 6379)],
        },
    },
}

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticatedOrReadOnly'
    ]
}


CSRF_TRUSTED_ORIGINS = [
    "https://renitent-juliet-hypersuggestible.ngrok-free.dev",
    "https://renitent-juliet-hypersuggestible.ngrok-free.dev/",
    "http://localhost:8001"
]
